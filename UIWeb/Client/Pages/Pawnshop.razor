@using UIWeb.Client.Components.Search;
@inherits MainMenuBase
@page "/pawnshop"


<PageTitle>Ломбарди - основний список</PageTitle>

<div class="d-flex flex-row justify-content-between align-items-center mx-3 my-4 flex-wrap">
    <div class="my-2">
        <SortingComponent
            OnFilterChanged="OnSortingIndexChanged"
            Filters="_testSortingAttributes"
            SelectedIndex="_selectedIndexSort">
        </SortingComponent>
    </div>

    <div class="my-2">
        <SearchComponent
            OnFilterChanged="OnSearchingChangedIndex"
            OnQueryChanged="OnSearchingChangedQuery"
            Filters="_testSearchPrinciples"
            SelectedIndex="_selectedIndexSearch">
        </SearchComponent>
    </div>
</div>

<div>
    <PawnshopsComponent PawnshopsList="Pawnshops" OnLoadMoreRequest="LoadMoreAsync"></PawnshopsComponent>
</div>

@code {


    #region SearchEngineRegion

    private readonly List<string> _testSearchPrinciples = new() {
        "за назвою",
        "за адресою",
        "за кількістю грошей"
    };

    private int _selectedIndexSearch;

    private void OnSearchingChangedIndex(int index) {
        _selectedIndexSearch = index;
        Console.WriteLine(_testSearchPrinciples[_selectedIndexSearch]);
    }

    private async Task OnSearchingChangedQuery(string? query) {
        Console.WriteLine($"{_testSearchPrinciples[_selectedIndexSearch]}: {query}");

        if (query != null) await Search(_selectedIndexSort, query);
    }

    #endregion


    #region SortingRegion

    private readonly List<string> _testSortingAttributes = new() {
        "По назві",
        "По адресі",
        "По кількості грошей"
    };

    private int _selectedIndexSort;

    private async Task OnSortingIndexChanged(int obj) {
        _selectedIndexSort = obj;

        await Sort(_selectedIndexSort);
    }

    #endregion

}